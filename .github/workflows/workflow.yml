name: Build & Test (Reusable)

on:
  workflow_call:
    inputs:
      language:
        required: true
        type: string
      version:
        required: true
        type: string
      working-directory:
        required: false
        type: string
        default: "."
      run-lint:
        required: false
        type: boolean
        default: true
      run-tests:
        required: false
        type: boolean
        default: true
      upload-artifacts:
        required: false
        type: boolean
        default: false

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      ################################
      # PYTHON
      ################################
      - name: Setup Python
        if: ${{ inputs.language == 'python' }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.version }}

      - name: Cache Python packages
        if: ${{ inputs.language == 'python' }}
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('${{ inputs.working-directory }}/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python deps
        if: ${{ inputs.language == 'python' }}
        run: |
          python -m pip install --upgrade pip
          if [ -f "${{ inputs.working-directory }}/requirements.txt" ]; then
            pip install -r "${{ inputs.working-directory }}/requirements.txt"
          fi

      - name: Run Python tests
        if: ${{ inputs.language == 'python' && inputs.run-tests }}
        run: |
          cd "${{ inputs.working-directory }}"
          pytest -v

      - name: Python lint
        if: ${{ inputs.language == 'python' && inputs.run-lint }}
        run: |
          pip install flake8
          flake8 "${{ inputs.working-directory }}" || true

      - name: Upload Python artifacts
        if: ${{ inputs.language == 'python' && inputs.upload-artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: python-artifacts
          path: |
            ${{ inputs.working-directory }}/dist
            ${{ inputs.working-directory }}/build
            ${{ inputs.working-directory }}/.pytest_cache

      ################################
      # NODE
      ################################
      - name: Setup Node
        if: ${{ inputs.language == 'node' }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.version }}

      - name: Cache Node modules
        if: ${{ inputs.language == 'node' }}
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.cache/yarn
          key: ${{ runner.os }}-node-${{ hashFiles('${{ inputs.working-directory }}/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node deps
        if: ${{ inputs.language == 'node' }}
        run: |
          cd "${{ inputs.working-directory }}"
          npm install

      - name: Build Node app
        if: ${{ inputs.language == 'node' }}
        run: |
          cd "${{ inputs.working-directory }}"
          npm run build
      
      - name: Run Node.js tests
        if: ${{ inputs.language == 'node' && inputs.run-tests }}
        working-directory: ${{ inputs.working-directory }}
        run: |
          npm test

      - name: Node lint
        if: ${{ inputs.language == 'node' && inputs.run-lint }}
        run: |
          cd "${{ inputs.working-directory }}"
          npm install eslint
          npx eslint . || true

      - name: Upload Node artifacts
        if: ${{ inputs.language == 'node' && inputs.upload-artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: node-artifacts
          path: |
            ${{ inputs.working-directory }}/dist
            ${{ inputs.working-directory }}/build

      ################################
      # JAVA
      ################################
      - name: Setup Java
        if: ${{ inputs.language == 'java' }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.version }}
          distribution: temurin

      - name: Cache Maven packages
        if: ${{ inputs.language == 'java' }}
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('${{ inputs.working-directory }}/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Java app
        if: ${{ inputs.language == 'java' }}
        run: |
          cd "${{ inputs.working-directory }}"
          ./mvnw clean package || mvn clean package

      - name: Java lint (Checkstyle)
        if: ${{ inputs.language == 'java' && inputs.run-lint }}
        run: |
          cd "${{ inputs.working-directory }}"
          mvn checkstyle:check || true

      - name: Run Java tests
        if: ${{ inputs.language == 'java' && inputs.run-tests }}
        run: |
          cd "${{ inputs.working-directory }}"
          mvn test
      
      - name: Upload Java artifacts
        if: ${{ inputs.language == 'java' && inputs.upload-artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: java-artifacts
          path: |
            ${{ inputs.working-directory }}/target/*.jar
            ${{ inputs.working-directory }}/target/*.war

      ################################
      # GO
      ################################
      - name: Setup Go
        if: ${{ inputs.language == 'go' }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.version }}

      - name: Cache Go modules
        if: ${{ inputs.language == 'go' }}
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('${{ inputs.working-directory }}/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Go deps
        if: ${{ inputs.language == 'go' }}
        run: |
          cd "${{ inputs.working-directory }}"
          go mod tidy

      - name: Go lint
        if: ${{ inputs.language == 'go' && inputs.run-lint }}
        run: |
          cd "${{ inputs.working-directory }}"
          go install golang.org/x/lint/golint@latest
          golint ./... || true

      - name: Run Go tests
        if: ${{ inputs.language == 'go' && inputs.run-tests }}
        run: |
          cd "${{ inputs.working-directory }}"
          go test ./... -v

      - name: Upload Go artifacts
        if: ${{ inputs.language == 'go' && inputs.upload-artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: go-artifacts
          path: |
            ${{ inputs.working-directory }}/bin
            ${{ inputs.working-directory }}/*.exe
            ${{ inputs.working-directory }}/*.out

      ################################
      # RUBY
      ################################
      - name: Setup Ruby
        if: ${{ inputs.language == 'ruby' }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ inputs.version }}

      - name: Cache Ruby gems
        if: ${{ inputs.language == 'ruby' }}
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-ruby-${{ hashFiles('${{ inputs.working-directory }}/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-ruby-

      - name: Install Ruby deps
        if: ${{ inputs.language == 'ruby' }}
        run: |
          cd "${{ inputs.working-directory }}"
          bundle install

      - name: Ruby lint (RuboCop)
        if: ${{ inputs.language == 'ruby' && inputs.run-lint }}
        run: |
          cd "${{ inputs.working-directory }}"
          gem install rubocop
          rubocop || true

      - name: Run Ruby tests
        if: ${{ inputs.language == 'ruby' && inputs.run-tests }}
        run: |
          cd "${{ inputs.working-directory }}"
          bundle exec rspec || true
      
      - name: Upload Ruby artifacts
        if: ${{ inputs.language == 'ruby' && inputs.upload-artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: ruby-artifacts
          path: |
            ${{ inputs.working-directory }}/pkg
            ${{ inputs.working-directory }}/coverage